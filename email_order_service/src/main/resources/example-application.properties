# this is just sample config which is not really in use if you run this module
# the main, real config (analogical like this one) used here is taken from config server (see module config_server)
# see https://bitbucket.org/slawekhaa/microservices_config_demo

server.port=60611
spring.application.name=email-order-service

email.host=imap.gmail.com
email.port=993
email.mailbox=INBOX
email.username=xxx
email.password=yyy
email.delay=10000
email.maxMessages=1000
email.timout=30
email.debug=false
spring.main.web-application-type=none

# Email orders consumer service
api.url_base=http://docker.localhost:6063
api.url_resource=/supply-orders/supply-email-order

# DB configuration (orders storage)
spring.datasource.url=jdbc:postgresql://docker.localhost:5432/postgres
#spring.datasource.url=jdbc:postgresql://192.168.99.100:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# GrayLog service
spring.activemq.broker-url=tcp://docker.localhost:61616
#spring.activemq.broker-url=tcp://192.168.99.100:61616
spring.activemq.packages.trusted=com.github.hadasbro
spring.activemq.destination=app-logs

# cloud
spring.cloud.refresh.enabled = false
